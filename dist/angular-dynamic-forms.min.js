angular.module("dynamicForms",[]),angular.element.prototype.closestAttribute=function(t){var e=this;return e.parent()&&"body"!==e.parent()[0].nodeName.toLowerCase()?e.parent().attr(t)?e.parent().attr(t):e.parent().closestAttribute(t):void 0},angular.module("dynamicForms").service("DfSchemaService",["DfUtils","$injector",function(t,e){var n=e.has("dynamicFormDefaults")?e.get("dynamicFormDefaults"):function(t){return{"ng-focus":"columnCtrl.onInputFocus()","ng-required":!0,type:t.type||"text",id:t.name,name:t.name}};this.findSchema=function(e){return t.getDependency(e.closestAttribute("df-schema"))},this.findColumn=function(t){return t.attr("df-column")||t.closestAttribute("df-column")},this.extractValue=function(t,e){var n=this.findSchema(t);return _(n).where({name:this.findColumn(t)}).pluck(e).value().pop()},this.extractColumn=function(t,n){var t=e.get(t);return _.find(t,{name:n})},this.extractValidators=function(t,r){var o=e.get(t),l=this.extractColumn(t,r);return _.chain(o).where({name:r}).pluck("validators").map(function(t){return _.defaults(t||{},n(l))}).value().pop()},this.prependColumnValue=function(t,e){var n=this.extractValue(t,e);t.prepend(n)},this.appendColumnValue=function(t,e){var n=this.extractValue(t,e),r=t.closestAttribute("df-controller"),o=t.closestAttribute("df-model-instance");t.append(_.template(n)({model:o,controller:r}))},this.getColumnValue=function(t,e){var n=this.extractValue(t,e),r=t.closestAttribute("df-controller"),o=t.closestAttribute("df-model-instance");return _.template(n)({model:o,controller:r})}}]),angular.module("dynamicForms").service("DfUtils",["$injector",function(t){var e={forMode:{write:"df-column-write",read:"df-column-read",edit:"df-column-edit"}};this.classForState=function(t){return e.forMode[t]},this.classesForStates=function(t){return _(t).map(function(t){return e.forMode[t]}).unique().value().join(" ")},this.getDependency=function(e){return e?t.get(e):void 0}}]),angular.module("dynamicForms").directive("dfModel",["$injector","$templateCache","DfUtils",function(t,e,n){function r(t){var e=t.customType||t.type;switch(e){case"radio":return"/radio.html";case"inputgroup":return"/inputgroup.html";case"terms":return"/terms.html";case"checkbox":return"/checkbox.html";default:return"/input.html"}}function o(e){if(e.dfTemplate)return e.dfTemplate;var n=t.has("DfSessionService")?t.get("DfSessionService"):null;return n&&t.get(n).isLoggedIn()?"myaccount":"npw"}return{restrict:"EA",priority:1100,compile:function(t,l){var a=n.getDependency(l.dfSchema),i=l.dfController,d=l.dfModelInstance,c=l.dfMode,s=l.ngForm,u=o(l),m={controller:i,form:s,mode:c,model:d},p=_.template(e.get("templates/"+u+"/wrapper.html"))(m),f=angular.element(p);t.prepend(f),_.each(a,function(t){m.column=t;var n=e.get(t.template)||e.get("templates/"+u+r(t));m.show=t.show?_.template(t.show)(m):!0,f.find("mainform").append(_.template(n)(m))})}}}]),angular.module("dynamicForms").controller("DfColumnController",["$scope","$element","$rootScope","DfUtils",function(t,e,n,r){var o={currentMode:e.closestAttribute("df-mode")||"write",element:e,input:void 0,savedValue:void 0,help:!1};this.registerInput=function(t){o.input=t,a(o.currentMode)},this.startEdit=function(){o.savedValue=o.input.val(),l("edit")},this.cancelEdit=function(){o.input.val(o.savedValue),o.input.triggerHandler("input"),l("read")},this.saveEdit=function(){o.input.controller("ngModel").$valid&&l("read")},this.onInputFocus=function(){n.$broadcast("df_input_focus",o.input.attr("id")),o.help=!0},this.toggleHelp=function(){o.help=!o.help},this.isReadonly=function(){return"read"===o.currentMode},this.inEdit=function(){return"edit"===o.currentMode},this.displayHelp=function(){return o.help};var l=function(t){a(t),o.currentMode=t},a=function(t){o.input.attr("readonly","read"===t)};n.$on("df_input_focus",function(t){o.help=t===o.input.attr("id")})}]),angular.module("dynamicForms").directive("dfColumn",function(){return{restrict:"A",scope:!0,controller:"DfColumnController",controllerAs:"columnCtrl"}}),angular.module("dynamicForms").directive("dfEditControls",function(){return{restrict:"A",require:"^dfColumn",templateUrl:"directives/model/column/components/`df-edit-controls.html`"}}),angular.module("dynamicForms").directive("dfEdit",function(){return{restrict:"A",require:"^dfColumn",templateUrl:"directives/model/column/components/df-edit.html"}}),angular.module("dynamicForms").directive("dfHelp",["$compile","DfSchemaService",function(t,e){return{restrict:"A",link:function(n,r,o){var l=e.getColumnValue(r,"helpImage"),a=e.getColumnValue(r,"help");l?r.find("img").attr("src",l):r.find("img").remove(),a&&r.find("div").append(a),t(r.contents())(n)}}}]),angular.module("dynamicForms").directive("dfInput",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1050,require:"^dfColumn",compile:function(n,r){n.removeAttr("df-input");var o=n.closestAttribute("df-schema"),l=n.closestAttribute("df-column"),a=n.closestAttribute("df-model-instance")||"model",i=n.closestAttribute("df-controller"),d=n.closestAttribute("df-mode")||"write",c=e.extractColumn(o,l),s=e.extractValidators(o,l);if(c.show){var u=_.template(c.show)({controller:i,model:a,mode:d});s["ng-required"]="("+u+")  && ("+s["ng-required"]+")"}return _.each(s,function(t,e){n.attr(e,_.template(t)({controller:i,model:a}))}),n.attr("ng-model",a+"."+l),{pre:function(e,n){t(n)(e)},post:function(t,e,n,r){r.registerInput(e)}}}}}]),angular.module("dynamicForms").directive("dfLabel",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1e3,compile:function(t){e.prependColumnValue(t,"label");var n=e.findColumn(t);t.attr("for",n)}}}]),angular.module("dynamicForms").run(["$templateCache",function(t){t.put("templates/default/input.html",'<div class="df-column" df-column="<%= column %>" df-mode="<%= mode %>">\r\n\r\n    <label df-label class="df-label"></label>\r\n\r\n    <div>\r\n        <input df-input class="df-input" />\r\n        <div class="messages">\r\n            <div df-edit class="df-edit"></div>\r\n            <div df-help class="df-help"></div>\r\n            <div df-validation class="df-validation"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div df-edit-controls class="df-edit-controls"></div>\r\n\r\n</div>'),t.put("templates/myaccount/input.html",'<div sy-form-group data-layout="form" df-column="<%= column.name %>" df-mode="<%= mode %>" ng-show="<%= show %>">\r\n    <label class="control-label" df-label ng-class="{\'label-required\': !optional}"></label>\r\n    <div>\r\n        <input type="text" class="form-control" df-input />\r\n\r\n        <div sy-alert-box="<%= column.name %>" df-validation>\r\n        </div>\r\n    </div>\r\n</div>'),t.put("templates/myaccount/radio.html",'<div sy-form-group data-layout="form" df-column="<%= column.name %>" df-mode="<%= mode %>" ng-show="<%= show %>">\r\n    <label class="control-label" df-label ng-class="{\'label-required\': !optional}"></label>\r\n    <div>\r\n        <input type="text" class="form-control" df-input />\r\n\r\n        <div class="sy-form-error" df-validation></div>\r\n    </div>\r\n</div>'),t.put("templates/myaccount/terms.html",'<label class="checkbox">\r\n    I have read, understand and agree with the <a sy-doc-href="terms.synergy">Terms and Conditions</a>, <a sy-doc-href="terms.privacy">Privacy Policy</a> and <a sy-doc-href="terms.collections">Collection of Information Statement</a> and I am authorised to enter into these Terms and Conditions.\r\n    <input type="checkbox" ng-model="<%= model %>.termsAccepted" class="sy-checkbox">\r\n</label>'),t.put("templates/myaccount/wrapper.html","<div>\r\n    <mainform></mainform>\r\n</div>"),t.put("templates/npw/checkbox.html",'<div class="field-group" df-column="<%= column.name %>" df-mode="<%= mode %>" ng-show="<%= show %>">\r\n    <input type="checkbox" class="filter-input" df-input>\r\n    <label class="filter-label" df-label></label>\r\n</div>'),t.put("templates/npw/input.html",'<span class="sy-field-wrapper" ng-class="{\'payment-status-meta-group\': \'<%= mode %>\' === \'read\', \'payment-status-meta-group--active\': columnCtrl.inEdit()}" df-column="<%= column.name %>" df-mode="<%= mode %>" ng-show="<%= show %>">\r\n\r\n    <dt class="payment-status-meta-label" ng-show="\'<%= mode %>\' === \'read\'"><span df-label></span></dt>\r\n\r\n    <dd ng-class="{\'payment-status-meta-data\': \'<%= mode %>\' === \'read\'}">\r\n\r\n        <div class="field-group"\r\n             ng-class="{\'field-group-tooltip--active\': columnCtrl.displayHelp(), \'field-group--error\': <%= form %>.<%= column.name %>.$invalid && <%= form %>.<%= column.name %>.$dirty}">\r\n\r\n            <div class="form-input-container">\r\n                <label class="form-label" df-label></label>\r\n                <input type="text" class="form-input" df-input />\r\n            </div>\r\n\r\n\r\n            <button type="button" class="form-tooltip-toggle" ng-click="columnCtrl.toggleHelp()">\r\n                <span>Show help information</span>\r\n            </button>\r\n\r\n            <!--Help-->\r\n            <div class="form-tooltip" df-help ng-class="{\'tooltip--image-with-caption\': \'<%= column.helpImage %>\'}">\r\n                <img src="" class="tooltip-image" alt=""/>\r\n                <div class="tooltip-description">\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <!--Validation-->\r\n            <div class="form-error" df-validation>\r\n            </div>\r\n        </div>\r\n\r\n    </dd>\r\n\r\n    <dd class="payment-status-meta-edit" ng-show="\'<%= mode %>\' === \'read\'">\r\n        <button type="button" class="btn btn--cancel" ng-click="columnCtrl.cancelEdit()">Cancel</button>\r\n        <button type="button" class="btn btn--save" ng-click="columnCtrl.saveEdit()">Save</button>\r\n        <button type="button" class="btn btn--edit" ng-click="columnCtrl.startEdit()">Edit</button>\r\n    </dd>\r\n\r\n</span>'),t.put("templates/npw/terms.html",'<div class="field-group field-group field-group--checkbox"\r\n     ng-class="{\'field-group-tooltip--active\': columnCtrl.displayHelp(), \'field-group--error\': <%= form %>.<%= column.name %>.$invalid && <%= form %>.<%= column.name %>.$dirty}"\r\n     df-column="<%= column.name %>" df-mode="<%= mode %>" ng-show="<%= show %>">\r\n\r\n    <div class="form-input-container">\r\n        <input type="checkbox" class="form-input" df-input />\r\n        <label class="form-label" for="<%= column.name %>">\r\n            I have read, understand and agree with the <a sy-doc-href="terms.synergy">Terms and Conditions</a>, <a sy-doc-href="terms.privacy">Privacy Policy</a> and <a sy-doc-href="terms.collections">Collection of Information Statement</a> and I am authorised to enter into these Terms and Conditions.\r\n        </label>\r\n    </div>\r\n</div>'),t.put("templates/npw/wrapper.html","<div ng-class=\"{'payment-status-container payment-status-container--review': '<%= mode %>' === 'read'}\">\r\n    <fieldset class=\"form-section\">\r\n        <dl ng-class=\"{'payment-status-meta payment-status-meta--review': '<%= mode %>' === 'read'}\">\r\n            <mainform>\r\n\r\n            </mainform>\r\n        </dl>\r\n    </fieldset>\r\n</div>"),t.put("directives/model/column/components/df-edit-controls.html",'<button class="df-cancel-edit" ng-click="columnCtrl.cancelEdit()">\r\n    Cancel\r\n</button>\r\n<button class="df-save-edit" ng-click="columnCtrl.saveEdit()">\r\n    Save\r\n</button>'),t.put("directives/model/column/components/df-edit.html",'<button class="df-edit-button" ng-click="columnCtrl.startEdit()" ng-if="columnCtrl.isReadonly()">\r\n    Edit\r\n</button>')}]),angular.module("dynamicForms").directive("dfValidation",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1e3,compile:function(t,n){e.appendColumnValue(t,"validation")}}}]);