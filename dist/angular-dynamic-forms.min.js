angular.module("dynamicForms",[]),angular.element.prototype.closestAttribute=function(t){var e=this;return e.parent()&&"body"!==e.parent()[0].nodeName.toLowerCase()?e.parent().attr(t)?e.parent().attr(t):e.parent().closestAttribute(t):void 0},angular.module("dynamicForms").directive("dfModel",["$compile","$templateCache","DfSchemaService",function(t,e,r){return{restrict:"EA",priority:1100,compile:function(t,n){t.removeAttr("df-model");var i=r.extractColumns(n.dfSchema),l=n.dfMode,a=e.get("templates/column.html");_.each(i,function(r){t.append(e.get(r.template)||_.template(a)({column:r.column,mode:l}))})}}}]),angular.module("dynamicForms").run(["$templateCache",function(t){t.put("templates/column.html",'<div df-column="<%= column %>" df-mode="<%= mode %>">\r\n\r\n    <label df-label class="df-label"></label>\r\n\r\n    <div>\r\n        <input class="df-input" df-input />\r\n        <div class="messages">\r\n            <div class="df-edit"></div>\r\n            <div df-help class="df-help"></div>\r\n            <div df-validation class="df-validation"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="df-edit-controls"></div>\r\n\r\n</div>'),t.put("templates/edit-controls.html",'<button class="df-cancel-edit" ng-click="columnCtrl.cancelEdit()">\r\n    Cancel\r\n</button>\r\n<button class="df-save-edit" ng-click="columnCtrl.saveEdit()">\r\n    Save\r\n</button>'),t.put("templates/edit.html",'<button class="df-edit-button" ng-click="columnCtrl.startEdit()" ng-if="columnCtrl.readonly()">\r\n    Edit\r\n</button>')}]),angular.module("dynamicForms").service("DfSchemaService",["$injector",function(t){this.extractColumns=function(e){return this.schema=t.get(e),_.map(this.schema,function(t){return{column:t.column,template:t.template}})},this.extractColumn=function(e,r){return this.schema=t.get(e),_.find(this.schema,{column:r})},this.extractValidators=function(e,r){return this.schema=t.get(e),_.chain(this.schema).where({column:r}).pluck("validators").value().pop()},this.extractValidation=function(e,r){return this.schema=t.get(e),_.chain(this.schema).where({column:r}).pluck("validation").value().pop()},this.extractLabel=function(e,r){return this.schema=t.get(e),_.chain(this.schema).where({column:r}).pluck("label").value().pop()},this.extractHelp=function(e,r){return this.schema=t.get(e),_.chain(this.schema).where({column:r}).pluck("help").value().pop()}}]),angular.module("dynamicForms").service("Utils",function(){var t={forMode:{write:"df-column-write",read:"df-column-read",edit:"df-column-edit"}};this.classFor=function(e){return t.forMode[e]},this.classesFor=function(e,r){return _([e,r]).map(function(e){return t.forMode[e]}).unique().value().join(" ")}}),angular.module("dynamicForms").directive("dfColumn",function(){return{restrict:"A",scope:!0,link:function(t,e,r,n){e.addClass("df-column"),n.init(e.closestAttribute("df-mode")||"write")},controller:"DfColumnController",controllerAs:"columnCtrl"}}),angular.module("dynamicForms").directive("dfEditControls",function(){return{restrict:"C",require:"^dfColumn",templateUrl:"templates/edit-controls.html"}}),angular.module("dynamicForms").directive("dfEdit",function(){return{restrict:"C",require:"^dfColumn",templateUrl:"templates/edit.html"}}),angular.module("dynamicForms").directive("dfHelp",["$compile","DfSchemaService",function(t,e){return{restrict:"EA",priority:1050,compile:function(t,r){var n=t.closestAttribute("df-schema"),i=t.closestAttribute("df-column"),l=e.extractHelp(n,i);t.removeAttr("df-help"),t.addClass("df-help"),t.append(l)}}}]),angular.module("dynamicForms").directive("dfInput",["$compile","DfSchemaService",function(t,e){return{restrict:"EA",priority:1050,compile:function(r,n){var i=r.closestAttribute("df-schema"),l=r.closestAttribute("df-column"),a=r.closestAttribute("df-model-instance")||"model",c=r.closestAttribute("df-controller"),o=(r.closestAttribute("df-mode")||"write",r.closestAttribute("df-model-instance")),d=e.extractValidators(i,l),u=e.extractColumn(i,l);r.removeAttr("df-input");var s;return"select"===(u&&u.type)?(s=angular.element('<select class="df-input"></select>'),r.replaceWith(s)):s=r,_.each(d,function(t,e){s.attr(e,_.template(t)({controller:c,model:o}))}),s.attr("ng-required",d&&d["ng-required"]||"true"),s.attr("type",u&&u.type||"text"),s.attr("id",l),s.attr("name",l),s.attr("ng-model",a+"."+l),s.attr("df-disable-toggle",""),function(e,r){t(r)(e)}}}}]),angular.module("dynamicForms").directive("dfLabel",["$compile","DfSchemaService",function(t,e){return{restrict:"EA",priority:1075,compile:function(t,r){var n=t.closestAttribute("df-schema"),i=t.closestAttribute("df-column"),l=e.extractLabel(n,i);t.removeAttr("df-label"),t.attr("for",i),t.prepend(l)}}}]),angular.module("dynamicForms").directive("dfValidation",["$compile","DfSchemaService",function(t,e){return{restrict:"EA",priority:1025,compile:function(t,r){var n=t.closestAttribute("df-schema"),i=t.closestAttribute("df-column"),l=e.extractValidation(n,i);t.removeAttr("df-validation"),t.addClass("df-validation"),t.append(l)}}}]),angular.module("dynamicForms").controller("DfColumnController",["$scope","$element","Utils",function(t,e,r){var n,i,l;this.init=function(t){n||a(t)},this.registerInput=function(t){i=t,c(n)},this.startEdit=function(){l=i.val(),a("edit")},this.cancelEdit=function(){i.val(l),i.triggerHandler("input"),a("read")},this.saveEdit=function(){i.val()&&a("read")},this.readonly=function(){return"read"===n};var a=function(t){e.toggleClass(r.classesFor(n,t)),c(t),n=t},c=function(t){i&&i.attr("disabled","read"===t)}}]),angular.module("dynamicForms").directive("dfDisableToggle",function(){return{restrict:"A",require:"^dfColumn",templateUrl:"templates/edit.html",link:function(t,e,r,n){n.registerInput(e)}}});