angular.module("dynamicForms",[]),angular.element.prototype.closestAttribute=function(t){var e=this;return e.parent()&&"body"!==e.parent()[0].nodeName.toLowerCase()?e.parent().attr(t)?e.parent().attr(t):e.parent().closestAttribute(t):void 0},angular.module("dynamicForms").directive("dfModel",["$compile","$templateCache","DfSchemaService",function(t,e,n){return{restrict:"EA",priority:1100,compile:function(t,r){var i=n.extractColumns(r.dfSchema),o=r.dfMode,l=e.get("templates/"+(r.dfTemplate||"default")+".html");_.each(i,function(n){t.append(e.get(n.template)||_.template(l)({column:n.column,mode:o}))})}}}]),angular.module("dynamicForms").service("DfSchemaService",["Utils","$injector",function(t,e){var n=e.has("dynamicFormDefaults")?e.get("dynamicFormDefaults"):function(t){return{"ng-required":!0,type:"text","df-edit-button":"",id:t,name:t}};this.findSchema=function(e){return t.getDependency(e.closestAttribute("df-schema"))},this.findColumn=function(t){return t.closestAttribute("df-column")},this.extractValue=function(t,e){var n=this.findSchema(t);return _(n).where({column:this.findColumn(t)}).pluck(e).value().pop()},this.extractColumns=function(t){return this.schema=e.get(t),_.map(this.schema,function(t){return{column:t.column,template:t.template}})},this.extractColumn=function(t,n){return this.schema=e.get(t),_.find(this.schema,{column:n})},this.extractValidators=function(t,r){return this.schema=e.get(t),_.chain(this.schema).where({column:r}).pluck("validators").map(function(t){return _.defaults(t||{},n())}).value().pop()},this.prependColumnValue=function(t,e){var n=this.extractValue(t,e);t.prepend(n)},this.appendColumnValue=function(t,e){var n=this.extractValue(t,e);t.append(n)}}]),angular.module("dynamicForms").service("Utils",["$injector",function(t){var e={forMode:{write:"df-column-write",read:"df-column-read",edit:"df-column-edit"}};this.classForState=function(t){return e.forMode[t]},this.classesForStates=function(t){return _(t).map(function(t){return e.forMode[t]}).unique().value().join(" ")},this.getDependency=function(e){return e?t.get(e):void 0}}]),angular.module("dynamicForms").run(["$templateCache",function(t){t.put("templates/default.html",'<div class="df-column" df-column="<%= column %>" df-mode="<%= mode %>">\r\n\r\n    <label df-label class="df-label"></label>\r\n\r\n    <div>\r\n        <input df-input class="df-input" />\r\n        <div class="messages">\r\n            <div df-edit class="df-edit"></div>\r\n            <div df-help class="df-help"></div>\r\n            <div df-validation class="df-validation"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div df-edit-controls class="df-edit-controls"></div>\r\n\r\n</div>'),t.put("templates/npw.html",'<div class="field-group" df-column="<%= column %>" df-mode="<%= mode %>">\r\n\r\n    <div class="form-input-container">\r\n        <label class="form-label" df-label></label>\r\n        <input type="text" class="form-input" df-input>\r\n    </div>\r\n\r\n\r\n    <button type="button" toggle-tooltip="" class="form-tooltip-toggle">\r\n        <span>Show help information</span>\r\n    </button>\r\n\r\n    <!--Help-->\r\n    <div class="form-tooltip form-tooltip--feature-aside" df-help>\r\n    </div>\r\n    <!--Validation-->\r\n    <div class="form-error" df-validation>\r\n    </div>\r\n</div>\r\n'),t.put("directives/components/df-edit-controls.html",'<button class="df-cancel-edit" ng-click="columnCtrl.cancelEdit()">\r\n    Cancel\r\n</button>\r\n<button class="df-save-edit" ng-click="columnCtrl.saveEdit()">\r\n    Save\r\n</button>'),t.put("directives/components/df-edit.html",'<button class="df-edit-button" ng-click="columnCtrl.startEdit()" ng-if="columnCtrl.readonly()">\r\n    Edit\r\n</button>')}]),angular.module("dynamicForms").directive("dfColumn",function(){return{restrict:"A",scope:!0,link:function(t,e,n,r){r.init(e.closestAttribute("df-mode")||"write")},controller:"DfColumnController",controllerAs:"columnCtrl"}}),angular.module("dynamicForms").directive("dfEditControls",function(){return{restrict:"A",require:"^dfColumn",templateUrl:"directives/components/df-edit-controls.html"}}),angular.module("dynamicForms").directive("dfEdit",function(){return{restrict:"A",require:"^dfColumn",templateUrl:"directives/components/df-edit.html"}}),angular.module("dynamicForms").directive("dfHelp",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1050,compile:function(t,n){e.appendColumnValue(t,"help")}}}]),angular.module("dynamicForms").directive("dfInput",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1050,compile:function(n,r){var i=n.closestAttribute("df-schema"),o=n.closestAttribute("df-column"),l=n.closestAttribute("df-model-instance")||"model",c=n.closestAttribute("df-controller"),a=(n.closestAttribute("df-mode")||"write",n.closestAttribute("df-model-instance")),d=e.extractValidators(i,o),u=e.extractColumn(i,o);n.removeAttr("df-input");var s;return"select"===(u&&u.type)?(s=angular.element('<select class="df-input"></select>'),n.replaceWith(s)):s=n,_.each(d,function(t,e){s.attr(e,_.template(t)({controller:c,model:a}))}),s.attr("ng-model",l+"."+o),function(e,n){t(n)(e)}}}}]),angular.module("dynamicForms").directive("dfLabel",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1075,compile:function(t){e.prependColumnValue(t,"label");var n=e.findColumn(t);t.attr("for",n)}}}]),angular.module("dynamicForms").directive("dfValidation",["$compile","DfSchemaService",function(t,e){return{restrict:"A",priority:1025,compile:function(t,n){e.appendColumnValue(t,"validation")}}}]),angular.module("dynamicForms").controller("DfColumnController",["$scope","$element","Utils",function(t,e,n){var r,i,o;this.init=function(t){r||l(t)},this.registerInput=function(t){i=t,c(r)},this.startEdit=function(){o=i.val(),l("edit")},this.cancelEdit=function(){i.val(o),i.triggerHandler("input"),l("read")},this.saveEdit=function(){i.controller("ngModel").$valid&&l("read")},this.readonly=function(){return"read"===r};var l=function(t){e.toggleClass(n.classesForStates([r,t])),c(t),r=t},c=function(t){i&&i.attr("disabled","read"===t)}}]),angular.module("dynamicForms").directive("dfEditButton",function(){return{restrict:"A",require:"^dfColumn",templateUrl:"directives/components/df-edit.html",link:function(t,e,n,r){r.registerInput(e)}}});